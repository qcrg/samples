#!/bin/python3

from files_installer import FilesInstaller
import tarfile
import os
import sys
from shutil import copyfile

default_config = [("PREFIX", "/usr"),
                  ("DIR_NAME", "templates"),
                  ("IGNORE", []),
                  ("USE_TAR", False)]
use_default_if_not_exist_config = True
config_file_name = "/etc/template.conf"
share_name = "/share/"

config = dict()
template_names = []
installer = FilesInstaller()
template_name = str()

def update_options():
    global template_name
    for arg in sys.argv[1:]:
        if arg == "-f":
            installer.force = True
        elif arg[0] == '-':
            raise Exception("Option is undefined [{}]".format(arg))
        elif template_name != "":
            raise Exception("Second template name defined [{}, {}]".format(
                template_name, arg))
        else:
            template_name = arg

def check_config(config):
    def check_opt(opt_name):
        if not opt_name in config:
            raise Exception(opt_name + " is not set")
        if len(config[opt_name]) < 1:
            raise Exception(opt_name + " is empty")
    check_opt("PREFIX")
    check_opt("DIR_NAME")

def update_config_types():
    config["IGNORE"] = config["IGNORE"].split(',')
    config["USE_TAR"] = bool(config["USE_TAR"])

def update_config():
    try:
        config_file = open(config_file_name, "r")
    except FileNotFoundError:
        if use_default_if_not_exist_config:
            return default_config
        else:
            raise FileNotFoundError("Config file not found")

    while True:
        next_line = config_file.readline()
        next_line = next_line.strip()
        if not next_line:
            break
        if next_line[0] == '#':
            continue
        opt = next_line.split("=")
        if len(opt) != 2:
            raise Exception("Option [{}] is bad, must be [A=B]".format(opt))
        config[opt[0]] = opt[1]
    update_config_types()
    check_config(config)
    return config

def update_template_names():
    dir_name = config["PREFIX"] + share_name + config["DIR_NAME"]
    res = []
    for file in os.listdir(dir_name):
        path = dir_name + '/' + file
        if os.path.isfile(path) and tarfile.is_tarfile(path):
            template_names.append(file)

def create_temp_dir():
    dir_path = "/tmp/" + config["DIR_NAME"]
    try:
        os.mkdir(dir_path)
    except FileExistsError:
        pass
    return dir_path

def copy_all_files(src_dir, dst_dir):
    installer.install(src_dir, dst_dir)

def check_template(templ_path):
    if not (os.path.exists(templ_path) or tarfile.is_tarfile(templ_path)):
        raise Exception("Template not found: " + template_name)

def process_behaviour():
    if len(sys.argv) < 2:
        print("Template types:")
        for name in template_names:
            print("    " + name.replace(".tgz", ''))
    else:
        temp_dir = create_temp_dir()
        templ_path = config["PREFIX"] + share_name + config["DIR_NAME"] + \
                '/' + template_name + ".tgz"
        if not os.path.exists(templ_path):
            raise Exception("Template is not exists [{}]".format(template_name))
        check_template(templ_path)
        tar = tarfile.open(templ_path, "r:gz")
        # tar.extractall()
        tar.extractall(temp_dir)
        copy_all_files(temp_dir + '/' + template_name, '.')


update_options()
update_config()
create_temp_dir()
update_template_names()
process_behaviour()
